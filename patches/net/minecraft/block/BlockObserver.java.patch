--- a/net/minecraft/block/BlockObserver.java
+++ b/net/minecraft/block/BlockObserver.java
@@ -1,6 +1,9 @@
 package net.minecraft.block;
 
+import carpet.logging.logHelpers.BlockUpdatesLogHelper;
+import carpet.logging.LoggerRegistry;
 import java.util.Random;
+import net.minecraft.init.Blocks;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.item.BlockItemUseContext;
 import net.minecraft.state.BooleanProperty;
@@ -56,14 +59,41 @@
 
     public IBlockState updatePostPlacement(IBlockState stateIn, EnumFacing facing, IBlockState facingState, IWorld worldIn, BlockPos currentPos, BlockPos facingPos)
     {
+        // TISCM Block Updates logger
+        if (LoggerRegistry.__blockupdates && stateIn.get(FACING) == facing && !worldIn.isRemote())
+        {
+            IBlockState iblockstate = worldIn.getBlockState(currentPos.offset(facing.getOpposite()));
+            if (iblockstate.getBlock() == Blocks.DEAD_FIRE_CORAL_BLOCK)
+            {
+                BlockUpdatesLogHelper.onBlockUpdated(currentPos, "PP", worldIn.getDimension().getType().getId());
+            }
+        }
+        // end TISCM Block Updates logger
+        
         if (stateIn.get(FACING) == facing && !stateIn.get(POWERED))
         {
             this.startSignal(worldIn, currentPos);
         }
-
+        
         return super.updatePostPlacement(stateIn, facing, facingState, worldIn, currentPos, facingPos);
     }
+    
 
+    // TISCM Block Updates logger
+    public void neighborChanged(IBlockState state, World worldIn, BlockPos pos, Block blockIn, BlockPos fromPos)
+    {
+        if (LoggerRegistry.__blockupdates && !worldIn.isRemote())
+        {
+            IBlockState iblockstate = worldIn.getBlockState(pos.offset(state.get(FACING).getOpposite()));
+            if (iblockstate.getBlock() == Blocks.DEAD_FIRE_CORAL_BLOCK)
+            {
+                BlockUpdatesLogHelper.onBlockUpdated(pos, "NC", worldIn.getDimension().getType().getId());
+            }
+        }
+        super.neighborChanged(state, worldIn, pos, blockIn, fromPos);
+    }
+    // end TISCM Block Updates logger
+
     private void startSignal(IWorld worldIn, BlockPos pos)
     {
         if (!worldIn.isRemote() && !worldIn.getPendingBlockTicks().isTickScheduled(pos, this))
