--- a/net/minecraft/block/Block.java
+++ b/net/minecraft/block/Block.java
@@ -1,5 +1,6 @@
 package net.minecraft.block;
 
+import carpet.logging.logHelpers.MicroTickLogHelper;
 import it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap;
 import java.util.List;
 import java.util.Objects;
@@ -175,7 +176,11 @@
     @Deprecated
     public MaterialColor getMaterialColor(IBlockState state, IBlockReader worldIn, BlockPos pos)
     {
-        return this.materialColor;
+    	if (carpet.settings.CarpetSettings.stainedGlassNoMapRendering && state.getMaterial() == state.getMaterial().GLASS)
+    	{
+    		return this.materialColor.AIR;
+    	}
+    	return this.materialColor;
     }
 
     @Deprecated
@@ -183,6 +188,11 @@
     {
         try (BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain())
         {
+            // TISCM Micro Tick logger
+            if (MicroTickLogHelper.loggerActivated())
+            {
+                MicroTickLogHelper.onBlockUpdate(worldIn.getWorld(), pos, 0, "PostPlacement", MicroTickLogHelper.getUpdateOrderList(UPDATE_ORDER)); // TISCM Micro Tick logger); // TISCM Micro Tick logger
+            }
             for (EnumFacing enumfacing : UPDATE_ORDER)
             {
                 blockpos$pooledmutableblockpos.setPos(pos).move(enumfacing);
@@ -190,6 +200,11 @@
                 IBlockState iblockstate1 = iblockstate.updatePostPlacement(enumfacing.getOpposite(), stateIn, worldIn, blockpos$pooledmutableblockpos, pos);
                 replaceBlock(iblockstate, iblockstate1, worldIn, blockpos$pooledmutableblockpos, flags);
             }
+            // TISCM Micro Tick logger
+            if (MicroTickLogHelper.loggerActivated())
+            {
+                MicroTickLogHelper.onBlockUpdate(worldIn.getWorld(), pos, 1, "PostPlacement", MicroTickLogHelper.getUpdateOrderList(UPDATE_ORDER)); // TISCM Micro Tick logger
+            }
         }
     }
 
