--- a/net/minecraft/world/WorldServer.java
+++ b/net/minecraft/world/WorldServer.java
@@ -1,5 +1,7 @@
 package net.minecraft.world;
 
+import carpet.helpers.TickSpeed;
+import carpet.utils.CarpetProfiler;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.util.concurrent.ListenableFuture;
@@ -192,13 +194,25 @@
             this.wakeAllPlayers();
         }
 
+        //CM profiler
+        int did = this.dimension.getType().getId();
+        String world_name = (did==0)?"Overworld":((did<0?"The Nether":"The End"));
+        // CM end
+
+        if (TickSpeed.process_entities)
+        { // [CM] extra indent to skip processing of entities
         this.profiler.startSection("spawner");
+        CarpetProfiler.start_section(world_name, "Spawning");
 
-        if (this.getGameRules().getBoolean("doMobSpawning") && this.worldInfo.getTerrainType() != WorldType.DEBUG_ALL_BLOCK_STATES)
+
+            if (this.getGameRules().getBoolean("doMobSpawning") && this.worldInfo.getTerrainType() != WorldType.DEBUG_ALL_BLOCK_STATES)
         {
             this.entitySpawner.findChunksForSpawning(this, this.spawnHostileMobs, this.spawnPeacefulMobs, this.worldInfo.getGameTime() % 400L == 0L);
             this.getChunkProvider().spawnMobs(this, this.spawnHostileMobs, this.spawnPeacefulMobs);
         }
+        CarpetProfiler.end_current_section();
+        }
+        // [CM] end extra indent
 
         this.profiler.endStartSection("chunkSource");
         this.chunkProvider.tick(p_72835_1_);
@@ -209,6 +223,8 @@
             this.setSkylightSubtracted(j);
         }
 
+        if (TickSpeed.process_entities)
+        { // CM extra indent to skip processing of entities
         this.worldInfo.setWorldTotalTime(this.worldInfo.getGameTime() + 1L);
 
         if (this.getGameRules().getBoolean("doDaylightCycle"))
@@ -217,16 +233,27 @@
         }
 
         this.profiler.endStartSection("tickPending");
+        CarpetProfiler.start_section(world_name, "Blocks");
         this.tickPending();
+        CarpetProfiler.end_current_section();
+        } // end extra indent
         this.profiler.endStartSection("tickBlocks");
+        CarpetProfiler.start_section(world_name, "Blocks");
         this.tickBlocks();
+        CarpetProfiler.end_current_section();
         this.profiler.endStartSection("chunkMap");
         this.playerChunkMap.tick();
+
+        if (TickSpeed.process_entities)
+        { // CM extra indent to skip processing of entities
         this.profiler.endStartSection("village");
+        CarpetProfiler.start_section(world_name, "Villages");
         this.villageCollection.tick();
         this.villageSiege.tick();
+        CarpetProfiler.end_current_section();
         this.profiler.endStartSection("portalForcer");
         this.worldTeleporter.removeStalePortalLocations(this.getGameTime());
+        }
         this.profiler.endSection();
         this.sendQueuedBlockEvents();
         this.insideTick = false;
@@ -408,6 +435,13 @@
                 chunk.enqueueRelightChecks();
                 this.profiler.endStartSection("tickChunk");
                 chunk.tick(false);
+                //[CM] tick freeze
+                if (!TickSpeed.process_entities)
+                { // skipping the rest of the block processing
+                    this.profiler.endSection();
+                    continue;
+                }
+
                 this.profiler.endStartSection("thunder");
 
                 if (flag && flag1 && this.rand.nextInt(100000) == 0)
