--- a/net/minecraft/command/impl/SummonCommand.java
+++ b/net/minecraft/command/impl/SummonCommand.java
@@ -1,5 +1,6 @@
 package net.minecraft.command.impl;
 
+import carpet.settings.CarpetSettings;
 import com.mojang.brigadier.CommandDispatcher;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
@@ -14,11 +15,14 @@
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.IEntityLivingData;
 import net.minecraft.entity.effect.EntityLightningBolt;
+import net.minecraft.entity.passive.EntitySkeletonHorse;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.util.text.TextComponentTranslation;
+import net.minecraft.world.DifficultyInstance;
+import net.minecraft.world.WorldServer;
 import net.minecraft.world.chunk.storage.AnvilChunkLoader;
 
 public class SummonCommand
@@ -50,7 +54,35 @@
         if (EntityType.getId(EntityType.LIGHTNING_BOLT).equals(type))
         {
             Entity entity1 = new EntityLightningBolt(source.getWorld(), pos.x, pos.y, pos.z, false);
-            source.getWorld().addWeatherEffect(entity1);
+            
+            // [CM] SummonNaturalLightning - if statement around
+            if (!CarpetSettings.summonNaturalLightning)
+            {
+                source.getWorld().addWeatherEffect(entity1);
+            }
+            else
+            {
+                BlockPos bp = ((WorldServer)source.getWorld()).adjustPosToNearbyEntity(new BlockPos(pos.x, 0, pos.z));
+                if(source.getWorld().isRainingAt(bp)){
+                    DifficultyInstance difficultyinstance = source.getWorld().getDifficultyForLocation(bp);
+        
+                    if (source.getWorld().getGameRules().getBoolean("doMobSpawning") && source.getWorld().rand.nextDouble() < (double)difficultyinstance.getAdditionalDifficulty() * 0.01D)
+                    {
+                        EntitySkeletonHorse entityskeletonhorse = new EntitySkeletonHorse(source.getWorld());
+                        entityskeletonhorse.setTrap(true);
+                        entityskeletonhorse.setGrowingAge(0);
+                        entityskeletonhorse.setPosition((double)bp.getX(), (double)bp.getY(), (double)bp.getZ());
+                        source.getWorld().spawnEntity(entityskeletonhorse);
+                        source.getWorld().addWeatherEffect(new EntityLightningBolt(source.getWorld(), (double)bp.getX(), (double)bp.getY(), (double)bp.getZ(), true));
+                    }
+                    else
+                    {
+                        source.getWorld().addWeatherEffect(new EntityLightningBolt(source.getWorld(), (double)bp.getX(), (double)bp.getY(), (double)bp.getZ(), false));
+                    }
+                }
+            }
+            // [CM] SummonNaturalLightning - End
+            
             source.sendFeedback(new TextComponentTranslation("commands.summon.success", entity1.getDisplayName()), true);
             return 1;
         }
