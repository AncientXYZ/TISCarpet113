--- a/net/minecraft/command/Commands.java
+++ b/net/minecraft/command/Commands.java
@@ -1,5 +1,6 @@
 package net.minecraft.command;
 
+import carpet.settings.CarpetSettings;
 import com.google.common.collect.Maps;
 import com.google.common.io.Files;
 import com.google.gson.GsonBuilder;
@@ -95,6 +96,8 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.CarpetServer;
+
 public class Commands
 {
     private static final Logger LOGGER = LogManager.getLogger();
@@ -169,6 +172,7 @@
             StopCommand.register(this.dispatcher);
             WhitelistCommand.register(this.dispatcher);
         }
+        CarpetServer.registerCarpetCommands(this.dispatcher);
 
         this.dispatcher.findAmbiguities((p_201302_1_, p_201302_2_, p_201302_3_, p_201302_4_) ->
         {
@@ -250,7 +254,7 @@
                 TextComponentString textcomponentstring = new TextComponentString(exception.getMessage() == null ? exception.getClass().getName() : exception.getMessage());
                 ITextComponent itextcomponent = textcomponentstring;
 
-                if (LOGGER.isDebugEnabled())
+                if (LOGGER.isDebugEnabled() || CarpetSettings.superSecretSetting)
                 {
                     StackTraceElement[] astacktraceelement = exception.getStackTrace();
 
@@ -259,6 +263,10 @@
                         itextcomponent.appendText("\n\n").appendText(astacktraceelement[j].getMethodName()).appendText("\n ").appendText(astacktraceelement[j].getFileName()).appendText(":").appendText(String.valueOf(astacktraceelement[j].getLineNumber()));
                     }
                 }
+                else //CM print errors in production too
+                {
+                    exception.printStackTrace();
+                }
 
                 source.sendErrorMessage((new TextComponentTranslation("command.failed")).applyTextStyle((p_211704_1_) ->
                 {
