--- a/net/minecraft/entity/Entity.java
+++ b/net/minecraft/entity/Entity.java
@@ -1,5 +1,6 @@
 package net.minecraft.entity;
 
+import carpet.helpers.BlockRotator;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -150,7 +151,8 @@
     public float entityCollisionReduction;
     protected Random rand;
     public int ticksExisted;
-    private int fire;
+    //[CM] public for entity info
+    public int fire;
     protected boolean inWater;
     protected double submergedHeight;
     protected boolean eyesInWater;
@@ -192,6 +194,12 @@
     private final double[] pistonDeltas;
     private long pistonDeltasGameTime;
 
+    // for profiler
+    public String cm_name()
+    {
+        return "Another Entity";
+    }
+
     public Entity(EntityType<?> entityTypeIn, World worldIn)
     {
         this.entityId = nextEntityID++;
@@ -344,7 +352,7 @@
         }
     }
 
-    protected void setRotation(float yaw, float pitch)
+    public void setRotation(float yaw, float pitch) //CM changed from protected to set in player action pack
     {
         this.rotationYaw = yaw % 360.0F;
         this.rotationPitch = pitch % 360.0F;
@@ -1859,7 +1867,7 @@
     }
 
     @Nullable
-    protected final String getEntityString()
+    public final String getEntityString() // CM changed from protected to public
     {
         EntityType<?> entitytype = this.getType();
         ResourceLocation resourcelocation = EntityType.getId(entitytype);
@@ -2821,6 +2829,10 @@
 
     public EnumFacing getHorizontalFacing()
     {
+        //CM
+        if (BlockRotator.flippinEligibility(this))
+            return EnumFacing.fromAngle((double)this.rotationYaw).getOpposite();
+
         return EnumFacing.fromAngle((double)this.rotationYaw);
     }
 
