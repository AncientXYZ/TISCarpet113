--- a/net/minecraft/init/Bootstrap.java
+++ b/net/minecraft/init/Bootstrap.java
@@ -3,6 +3,9 @@
 import java.io.PrintStream;
 import java.util.Random;
 import java.util.function.Function;
+
+import carpet.helpers.BlockRotator;
+import carpet.settings.CarpetSettings;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockCarvedPumpkin;
 import net.minecraft.block.BlockDispenser;
@@ -476,6 +479,27 @@
         });
         BlockDispenser.registerDispenseBehavior(Blocks.SHULKER_BOX.asItem(), new Bootstrap.BehaviorDispenseShulkerBox());
 
+        // [CM] Block rotation by Xcom
+        BlockDispenser.registerDispenseBehavior(Blocks.CACTUS.asItem(), new Bootstrap.BehaviorDispenseOptional()
+        {
+            private final BehaviorDefaultDispenseItem dispenseBehavior = new BehaviorDefaultDispenseItem();
+
+            /**
+             * Dispense the specified stack, play the dispense sound and spawn particles.
+             */
+            protected ItemStack dispenseStack(IBlockSource source, ItemStack stack)
+            {
+                if(CarpetSettings.rotatorBlock)
+                {
+                    return BlockRotator.dispenserRotate(source, stack);
+                }
+                else
+                {
+                    return this.dispenseBehavior.dispense(source, stack);
+                }
+            }
+        });
+
         for (EnumDyeColor enumdyecolor : EnumDyeColor.values())
         {
             BlockDispenser.registerDispenseBehavior(BlockShulkerBox.getBlockByColor(enumdyecolor).asItem(), new Bootstrap.BehaviorDispenseShulkerBox());
@@ -642,7 +666,7 @@
                     EnumFacing enumfacing1 = source.getWorld().isAirBlock(blockpos.down()) ? enumfacing : EnumFacing.UP;
                     this.successful = ((ItemBlock)item).tryPlace(new Bootstrap.DispensePlaceContext(source.getWorld(), blockpos, enumfacing, stack, enumfacing1)) == EnumActionResult.SUCCESS;
 
-                    if (this.successful)
+                    if (this.successful && !CarpetSettings.stackableShulkerBoxes) // remove in 1.14.3
                     {
                         stack.shrink(1);
                     }
